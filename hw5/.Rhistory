X <- matrix(c(-1,-2,4,2,0,0,-2,2,2,-1,-1,3,3,0,0,2,2,-3,1,1),nrow=5,byrow = T)
print(X)
#Create vertebrate object
vertebrate <- as.data.frame(read.csv(vertebrate.csv))
#Create vertebrate object
vertebrate <- as.data.frame(read.csv(/Users/benjaminfox/Desktop/Data-180-Ben-Fox/hw5/vertebrate.csv)))
#Create vertebrate object
vertebrate <- as.data.frame(read.csv(Users/benjaminfox/Desktop/Data-180-Ben-Fox/hw5/vertebrate.csv)))
#Create vertebrate object
vertebrate <- as.data.frame(read.csv(Users/benjaminfox/Desktop/Data-180-Ben-Fox/hw5/vertebrate.csv))
#Create vertebrate object
vertebrate <- as.data.frame(read.csv(/Users/benjaminfox/Desktop/Data-180-Ben-Fox/hw5/vertebrate.csv))
#Create vertebrate object
vertebrate <- as.data.frame(read.csv("/Users/benjaminfox/Desktop/Data-180-Ben-Fox/hw5/vertebrate.csv"))
#Print vertebrate data frame
vertebrate
Ver_Euclidean<-as.matrix(dist(vertebrate[,-1]))
Ver_Euclidean
Ver_Euclidean
X <- matrix(c(-1,-2,4,2,0,0,-2,2,2,-1,-1,3,3,0,0,2,2,-3,1,1),nrow=5,byrow = T)
library(MASS)
library(dplyr)
library(MASS)
library(dplyr)
#Getting Vans93 dataset
Vans93 <- Cars93 %>% filter(Type == "Van") %>% select(Model, Price, EngineSize, Horsepower, MPG.highway, Length)
#Print Vans93
Vans93
#Creating base Vans_Euclidean matrix
Vans_Euclidean <- dist(as.matrix(Vans93[,-1]))
#Setting the names of the objects
colnames(Vans_Euclidean)<-Vans93[,1]
library(MASS)
library(dplyr)
library(MASS)
library(dplyr)
#Getting Vans93 dataset
Vans93 <- Cars93 %>% filter(Type == "Van") %>% select(Model, Price, EngineSize, Horsepower, MPG.highway, Length)
#Print Vans93
Vans93
#Creating base Vans_Euclidean matrix
Vans_Euclidean <- dist(as.matrix(Vans93[,-1]))
Vans_Euclidean
#Creating base Vans_Euclidean matrix
Vans_Euclidean <- dist(as.matrix(Vans93[,-1]))
Vans_Euclidean
#Setting the names of the objects
colnames(Vans_Euclidean)<-Vans93[,1]
colnames(Vans_Euclidean)<-Vans93[,1]
#Creating base Vans_Euclidean matrix
Vans_Euclidean <- dist(as.matrix(Vans93[,-1]))
Vans_Euclidean
#Setting the names of the objects
colnames(Vans_Euclidean)<-Vans93[,1]
#Setting the names of the objects
colnames(Vans_Euclidean)<-Vans93[,1]
#Setting the names of the objects
colnames(Vans_Euclidean)<-rbind(Vans93[,1])
#Creating base Vans_Euclidean matrix
Vans_Euclidean <- dist(as.matrix(Vans93[,-1]))
Vans_Euclidean
#Setting the names of the objects
colnames(Vans_Euclidean)<-Vans93[,1]
#naming things
x <- colnames(Vans_Euclidean)<-Vans93[,1]
#Getting Vans93 dataset
Vans93 <- Cars93 %>% filter(Type == "Van") %>% select(Model, Price, EngineSize, Horsepower, MPG.highway, Length)
#Print Vans93
Vans93
#naming things
x <- colnames(Vans_Euclidean)<-Vans93[,1]
library(MASS)
library(dplyr)
#Getting Vans93 dataset
Vans93 <- Cars93 %>% filter(Type == "Van") %>% select(Model, Price, EngineSize, Horsepower, MPG.highway, Length)
library(MASS)
library(dplyr)
#Getting Vans93 dataset
Vans93 <- Cars93 %>% filter(Type == "Van") %>% select(Model, Price, EngineSize, Horsepower, MPG.highway, Length)
#Getting Vans93 dataset
Vans93 <- Cars93 %>% filter(Type == "Van") %>% select(Model, Price, EngineSize, Horsepower, MPG.highway, Length)
library(MASS)
library(dplyr)
#Getting Vans93 dataset
Vans93 <- Cars93 %>% filter(Type == "Van") %>% select(Model, Price, EngineSize, Horsepower, MPG.highway, Length)
#Print Vans93
Vans93
#naming things
x <- colnames(Vans_Euclidean)<-Vans93[,1]
#naming things
x <- colnames(Vans_Euclidean)<-Vans93[,1]
#Creating base Vans_Euclidean matrix
Vans_Euclidean <- dist(as.matrix(Vans93[,-1]))
Vans_Euclidean
#Creating base Vans_Euclidean matrix
Vans_Euclidean <- as.matrix(dist(Vans93[,-1]))
Vans_Euclidean
#naming things
x <- colnames(Vans_Euclidean)<-Vans93[,1]
y <- rownames(Vans_Euclidean)<-Vans93[,1]
Vans_Euclidean
Vans_Euclidean <- round(Vans_Euclidean, digits = 2)
Vans_Euclidean
#Creating base Vans_Manhattan matrix
Vans_Manhattan <- as.matrix(dist(Vans93[,1], method = "manhattan"))
Vans_Manhattan
#Creating base Vans_Manhattan matrix
Vans_Manhattan <- as.matrix(dist(Vans93[,1], method = "manhattan"))
Vans_Manhattan
#Creating base Vans_Manhattan matrix
Vans_Manhattan <- as.matrix(dist(Vans93[,-1], method = "manhattan"))
Vans_Manhattan
#Creating base Vans_Euclidean matrix
Vans_Euclidean <- as.matrix(dist(Vans93[,-1]))
#Naming columns and distance
x <- colnames(Vans_Euclidean)<-Vans93[,1]
y <- rownames(Vans_Euclidean)<-Vans93[,1]
#Rounding the matrix to the 100ths place
Vans_Euclidean <- round(Vans_Euclidean, digits = 2)
#Printing distance matrix
Vans_Euclidean
#Creating base Vans_Manhattan matrix
Vans_Manhattan <- as.matrix(dist(Vans93[,-1], method = "manhattan"))
#Labeling the objects in Vans_Manhattan
x <- colnames(Vans_Manhattan)<-Vans93[,1]
y <- rownames(Vans_Manhattan)<-Vans93[,1]
#Running Vans_Manhattan
Vans_Manhattan
#Add row and column names to data frame
x <- colnames(Ver_Euclidean) <- vertebrate[,1]
#Make vertebrate_euclidean into a distance matrix
Ver_Euclidean<-as.matrix(dist(vertebrate[,-1]))
#Add row and column names to data frame
x <- colnames(Ver_Euclidean) <- vertebrate[,1]
y <- rownames(Ver_Euclidean) <- vertebrate[,1]
Ver_Euclidean
#Add row and column names to data frame
x <- colnames(Ver_Euclidean) <- vertebrate[,1]
y <- rownames(Ver_Euclidean) <- vertebrate[,1]
Ver_Euclidean
#Apply dist again to get a more proper looking distance matrix
dist(Ver_Euclidean)
#Make vertebrate_euclidean into a distance matrix
Ver_Euclidean<-as.matrix(dist(vertebrate[,-1]))
#Make vertebrate_euclidean into a distance matrix
Ver_Euclidean<-as.matrix(dist(vertebrate[,-1]))
#Add row and column names to data frame
x <- colnames(Ver_Euclidean) <- vertebrate[,1]
y <- rownames(Ver_Euclidean) <- vertebrate[,1]
#Apply dist again to get a more proper looking distance matrix
Ver_Euclidian <- dist(Ver_Euclidean)
Ver_Euclidean
#Apply dist again to get a more proper looking distance matrix
Ver_Euclidian <- dist(Ver_Euclidean)
Ver_Euclidean
#Apply dist again to get a more proper looking distance matrix
Ver_Euclidean <- dist(Ver_Euclidean)
Ver_Euclidean
#Make vertebrate_euclidean into a distance matrix
Ver_Euclidean<-as.matrix(dist(vertebrate[,-1]))
#Add row and column names to data frame
x <- colnames(Ver_Euclidean) <- vertebrate[,1]
y <- rownames(Ver_Euclidean) <- vertebrate[,1]
#Apply dist again of hclust to get a dendrogram
Ver_Euclidean <- hclust(dist(Ver_Euclidean))
#Print final dendrogram
Ver_Euclidean
Cluster_Ex<-read.csv("D:/Dickinson College Teaching/DATA 180/data/Cluster_Ex.csv") #"Path where your data is goes here"
ls(Cluster_Ex)
head(Cluster_Ex)
plot(X2~X1,data=Cluster_Ex,xlim=c(0,4), ylim=c(0,4),cex=1.3,cex.axis=1.3,pch=16)
Cluster_Ex<-read.csv("D:/Dickinson College Teaching/DATA 180/data/Cluster_Ex.csv") #"Path where your data is goes here"
Cluster_Ex<-read.csv("/Users/benjaminfox/Desktop/Data-180-Ben-Fox/Cluster_Ex.csv") #"Path where your data is goes here"
ls(Cluster_Ex)
head(Cluster_Ex)
plot(X2~X1,data=Cluster_Ex,xlim=c(0,4), ylim=c(0,4),cex=1.3,cex.axis=1.3,pch=16)
#Euclidean Distance, cluster method = complete
Cluster_Ex_HC<-hclust(dist(Cluster_Ex))
Cluster_Ex_HC
plot(Cluster_Ex_HC,cex=.75,xlab="")
#Print final dendrogram
plot(Ver_Euclidean, cex = .75, xlab = "")
#Make vertebrate_euclidean into a distance matrix
Ver_Euclidean<-as.matrix(dist(vertebrate[,-1]))
#Add row and column names to data frame
x <- colnames(Ver_Euclidean) <- vertebrate[,1]
y <- rownames(Ver_Euclidean) <- vertebrate[,1]
#Apply dist again of hclust to get a dendrogram
Ver_Euclidean <- hclust(dist(Ver_Euclidean))
#Print final dendrogram
plot(Ver_Euclidean, cex = .75, xlab = "")
#Make vertebrate_manhattan into a distance matrix
Ver_Manhattan <- as.matrix(dist(vertebrate[,-1]))
#Add row and column names to data frame
x <- colnames(Ver_Manhattan) <- vertebrate[,1]
y <- rownames(Ver_Manhattan) <- vertebrate[,1]
#Apply dist again of hclust to get a dendrogram
Ver_Manhattan <- hclust(dist(Ver_Manhattan, method = "manhattan"), method = "single")
#Print final dendrogram
plot(Ver_Manhattan, cex = .75, xlab = "")
