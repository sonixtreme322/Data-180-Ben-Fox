print("Big boy")
install.packages("randomForest") #This allows me to access the functions and data within this script
install.packages("MASS")
library("MASS")
head(Cars93)
?Cars93
ls(Cars93) #Tells you the column names of all the variables in the data
Cars93$Type #Find the categorizations of each column
#We can use the table function to find various things by writing table(dataset$variable)
table(Cars93$AirBags)
table(Cars93$Manufacturer)
#We'll use round plus division in tables to find relative frequency distribution
round(table(Cars93$AirBags)/nrow(Cars93),3)
#colors
colors()
#This list can be sliced by saying I want [first:last]
colors()[1:40]
palette()
palette()
palette()
#We can change the palette like so
palette(c("red2","orchid1","yellow4","tomato2"))
palette()
head(Cars93) #Shows the first six rows of the given data set
install.packages("randomForest") #This allows me to access the functions and data within this script
install.packages("MASS")
library("MASS")
head(Cars93) #Shows the first six rows of the given data set
library("MASS")
#Making a stem plot
Cars93$Weight
stem(Cars93$Weight)
#Dot plot of MPG
Cars93$MPG.city
stripchart(Cars93$MPG.city,method="stack",pch=16, + cex.axis=1.2,cex.lab=1.2,xlab="Miles per Gallon")
stripchart(Cars93$MPG.city,method="stack",pch=16, cex.axis=1.2,cex.lab=1.2,xlab="Miles per Gallon")
stripchart(Cars93$MPG.city,method="stack",pch=3, cex.axis=1.2,cex.lab=1.2,xlab="Miles per Gallon")
stripchart(Cars93$MPG.city,method="stack",pch=18, cex.axis=1.2,cex.lab=1.2,xlab="Miles per Gallon")
stripchart(Cars93$MPG.city,method="stack",pch=1, cex.axis=1.2,cex.lab=1.2,xlab="Miles per Gallon")
stripchart(Cars93$MPG.city,method="stack",pch=16, cex.axis=1.0,cex.lab=1.2,xlab="Miles per Gallon")
stripchart(Cars93$MPG.city,method="stack",pch=16, cex.axis=1.2,cex.lab=1.2,xlab="Miles per Gallon")
stripchart(Cars93$MPG.city,method="stack",pch=16, cex.axis=2.0,cex.lab=1.2,xlab="Miles per Gallon")
stripchart(Cars93$MPG.city,method="stack",pch=16, cex.axis=1.2,cex.lab=2.0,xlab="Miles per Gallon")
#Histogram of Weight
Cars93$Weight
hist(Cars93$Weight, cex.lab=1.2, cex.axis=1.2, col="lightgray", breaks=seq(1000, 5000, 300), xlab="Weight of Cars")
hist(Cars93$Weight, cex.lab=1.2, cex.axis=1.2, col="lightgray", breaks=seq(1000, 5000, 500), xlab="Weight of Cars")
print("ha ha i too use words")
1+1
2*pi*r
# A function that returns the circumference of a circle given its radius
circumference <- function(r){
2*pi*r
}
print(circumference(2))
print(circumference(6))
# A function that sums two numbers
sum_two_nums <- function(x, y) {x + y}
print(sum_two_nums(3,4))
print(sum_two_nums(1256,879))
mean_median <- function(vector){
mean <- mean(vector)
median <- median(vector)
return(c(mean, median))
}
mean_median
# Install library
install.packages("readxl")
#Call library
library("readxl")
library("MASS")
#1.
#SET WORKING DIRECTORY TO THE FOLDER WHERE THE DATASET IS
setwd("/Users/benjaminfox/Desktop/Data-180-Ben-Fox")
read_excel("particulate data.xlsx") # Always keep in mind file extensions excel = .xlsx or .xls, Comma separated value = .csv
#2.
# READ DIRECTLY FROM THE FOLDER
p_data<-read_excel("/Users/benjaminfox/Desktop/Data-180-Ben-Fox/particulate data.xlsx")
#3. Read CSV
p_data_csv = read.csv("/Users/benjaminfox/Desktop/Data-180-Ben-Fox/particulate data.csv")
my_data<-data.frame(
col_1 = c("A","B","C","D", "E"),
col_2 = c(1,2,3,4,5),
col_3 = c(1,12,3,4,5.4)
)
my_data
nrow(my_data)
# Create a vector of numbers
vec<-1:10
vec
stem(p_data$particulate_rounded_off)
stripchart(Cars93$MPG.city,method="stack",pch=16,cex.axis=1.2,cex.lab=1.2,xlab = "Miles per Gallon")
library(bslib)
detach("package:bslib", unload = TRUE)
